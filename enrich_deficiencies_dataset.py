import pandas as pd
import json

# Dictionnaire pour mappings personnalis√©s
reco_map = {
    "N": "Apporter un engrais azot√© (ur√©e ou nitrate d‚Äôammonium)",
    "P": "Appliquer un engrais phosphat√© (type superphosphate)",
    "K": "Utiliser un engrais riche en potassium (K‚ÇÇSO‚ÇÑ ou KCl)",
    "Ca": "Appliquer du nitrate de calcium ou du gypse",
    "Mg": "Appliquer un engrais foliaire MgSO‚ÇÑ √† 2%",
    "S": "Incorporer du sulfate d‚Äôammonium ou du soufre √©l√©mentaire",
    "Fe": "Pulv√©riser du ch√©late de fer (Fe-EDDHA)",
    "Mn": "Appliquer un engrais foliaire au MnSO‚ÇÑ",
    "Zn": "Utiliser un engrais foliaire √† base de ZnSO‚ÇÑ",
    "Cu": "Pulv√©riser un engrais cuivrique (sulfate de cuivre)",
    "B": "Appliquer du borax ou acide borique √† faible dose",
    "Mo": "Incorporer du molybdate de sodium ou d‚Äôammonium",
    "Cl": "Am√©liorer le drainage ou ajuster les apports KCl si n√©cessaire",
    "Co": "Enrober les semences avec sulfate de cobalt",
    "Ni": "Amender avec des traces de nitrate de nickel (rarement requis)"
}

# Charger le CSV existant
df = pd.read_csv("nutrient_deficiencies_dataset.csv")

# Ajouter diagnostic et recommandation
df["diagnostic"] = df["element"].apply(lambda e: f"Carence en {e}")
df["recommandation"] = df["element"].apply(lambda e: reco_map.get(e, "‚Äî"))

# Sauvegarder nouveau CSV
df.to_csv("deficiencies_enriched.csv", index=False)

# Exporter version JSON
json_records = df.to_dict(orient="records")
with open("deficiencies_dataset.json", "w", encoding="utf-8") as f:
    json.dump(json_records, f, indent=4, ensure_ascii=False)

print("‚úÖ Dataset enrichi avec diagnostic + recommandation")
print("üìÅ Export√© en : deficiencies_enriched.csv et deficiencies_dataset.json")
